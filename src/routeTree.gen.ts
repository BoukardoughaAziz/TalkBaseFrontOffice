/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainDashboardRouteImport } from './routes/mainDashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as MainDashboardIndexImport } from './routes/mainDashboard/index'
import { Route as MainDashboardAnalyticsImport } from './routes/mainDashboard/analytics'

// Create Virtual Routes

const MainDashboardSettingsRouteLazyImport = createFileRoute(
  '/mainDashboard/settings',
)()
const MainDashboardSettingsIndexLazyImport = createFileRoute(
  '/mainDashboard/settings/',
)()
const MainDashboardChatsIndexLazyImport = createFileRoute(
  '/mainDashboard/chats/',
)()
const MainDashboardSettingsNotificationsLazyImport = createFileRoute(
  '/mainDashboard/settings/notifications',
)()
const MainDashboardSettingsDisplayLazyImport = createFileRoute(
  '/mainDashboard/settings/display',
)()
const MainDashboardSettingsAppearanceLazyImport = createFileRoute(
  '/mainDashboard/settings/appearance',
)()
const MainDashboardSettingsAccountLazyImport = createFileRoute(
  '/mainDashboard/settings/account',
)()

// Create/Update Routes

const MainDashboardRouteRoute = MainDashboardRouteImport.update({
  id: '/mainDashboard',
  path: '/mainDashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MainDashboardIndexRoute = MainDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainDashboardRouteRoute,
} as any)

const MainDashboardSettingsRouteLazyRoute =
  MainDashboardSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => MainDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/mainDashboard/settings/route.lazy').then((d) => d.Route),
  )

const MainDashboardAnalyticsRoute = MainDashboardAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => MainDashboardRouteRoute,
} as any)

const MainDashboardSettingsIndexLazyRoute =
  MainDashboardSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => MainDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/mainDashboard/settings/index.lazy').then((d) => d.Route),
  )

const MainDashboardChatsIndexLazyRoute =
  MainDashboardChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => MainDashboardRouteRoute,
  } as any).lazy(() =>
    import('./routes/mainDashboard/chats/index.lazy').then((d) => d.Route),
  )

const MainDashboardSettingsNotificationsLazyRoute =
  MainDashboardSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => MainDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/mainDashboard/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const MainDashboardSettingsDisplayLazyRoute =
  MainDashboardSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => MainDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/mainDashboard/settings/display.lazy').then((d) => d.Route),
  )

const MainDashboardSettingsAppearanceLazyRoute =
  MainDashboardSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => MainDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/mainDashboard/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const MainDashboardSettingsAccountLazyRoute =
  MainDashboardSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => MainDashboardSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/mainDashboard/settings/account.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/mainDashboard': {
      id: '/mainDashboard'
      path: '/mainDashboard'
      fullPath: '/mainDashboard'
      preLoaderRoute: typeof MainDashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/mainDashboard/analytics': {
      id: '/mainDashboard/analytics'
      path: '/analytics'
      fullPath: '/mainDashboard/analytics'
      preLoaderRoute: typeof MainDashboardAnalyticsImport
      parentRoute: typeof MainDashboardRouteImport
    }
    '/mainDashboard/settings': {
      id: '/mainDashboard/settings'
      path: '/settings'
      fullPath: '/mainDashboard/settings'
      preLoaderRoute: typeof MainDashboardSettingsRouteLazyImport
      parentRoute: typeof MainDashboardRouteImport
    }
    '/mainDashboard/': {
      id: '/mainDashboard/'
      path: '/'
      fullPath: '/mainDashboard/'
      preLoaderRoute: typeof MainDashboardIndexImport
      parentRoute: typeof MainDashboardRouteImport
    }
    '/mainDashboard/settings/account': {
      id: '/mainDashboard/settings/account'
      path: '/account'
      fullPath: '/mainDashboard/settings/account'
      preLoaderRoute: typeof MainDashboardSettingsAccountLazyImport
      parentRoute: typeof MainDashboardSettingsRouteLazyImport
    }
    '/mainDashboard/settings/appearance': {
      id: '/mainDashboard/settings/appearance'
      path: '/appearance'
      fullPath: '/mainDashboard/settings/appearance'
      preLoaderRoute: typeof MainDashboardSettingsAppearanceLazyImport
      parentRoute: typeof MainDashboardSettingsRouteLazyImport
    }
    '/mainDashboard/settings/display': {
      id: '/mainDashboard/settings/display'
      path: '/display'
      fullPath: '/mainDashboard/settings/display'
      preLoaderRoute: typeof MainDashboardSettingsDisplayLazyImport
      parentRoute: typeof MainDashboardSettingsRouteLazyImport
    }
    '/mainDashboard/settings/notifications': {
      id: '/mainDashboard/settings/notifications'
      path: '/notifications'
      fullPath: '/mainDashboard/settings/notifications'
      preLoaderRoute: typeof MainDashboardSettingsNotificationsLazyImport
      parentRoute: typeof MainDashboardSettingsRouteLazyImport
    }
    '/mainDashboard/chats/': {
      id: '/mainDashboard/chats/'
      path: '/chats'
      fullPath: '/mainDashboard/chats'
      preLoaderRoute: typeof MainDashboardChatsIndexLazyImport
      parentRoute: typeof MainDashboardRouteImport
    }
    '/mainDashboard/settings/': {
      id: '/mainDashboard/settings/'
      path: '/'
      fullPath: '/mainDashboard/settings/'
      preLoaderRoute: typeof MainDashboardSettingsIndexLazyImport
      parentRoute: typeof MainDashboardSettingsRouteLazyImport
    }
  }
}

// Create and export the route tree

interface MainDashboardSettingsRouteLazyRouteChildren {
  MainDashboardSettingsAccountLazyRoute: typeof MainDashboardSettingsAccountLazyRoute
  MainDashboardSettingsAppearanceLazyRoute: typeof MainDashboardSettingsAppearanceLazyRoute
  MainDashboardSettingsDisplayLazyRoute: typeof MainDashboardSettingsDisplayLazyRoute
  MainDashboardSettingsNotificationsLazyRoute: typeof MainDashboardSettingsNotificationsLazyRoute
  MainDashboardSettingsIndexLazyRoute: typeof MainDashboardSettingsIndexLazyRoute
}

const MainDashboardSettingsRouteLazyRouteChildren: MainDashboardSettingsRouteLazyRouteChildren =
  {
    MainDashboardSettingsAccountLazyRoute:
      MainDashboardSettingsAccountLazyRoute,
    MainDashboardSettingsAppearanceLazyRoute:
      MainDashboardSettingsAppearanceLazyRoute,
    MainDashboardSettingsDisplayLazyRoute:
      MainDashboardSettingsDisplayLazyRoute,
    MainDashboardSettingsNotificationsLazyRoute:
      MainDashboardSettingsNotificationsLazyRoute,
    MainDashboardSettingsIndexLazyRoute: MainDashboardSettingsIndexLazyRoute,
  }

const MainDashboardSettingsRouteLazyRouteWithChildren =
  MainDashboardSettingsRouteLazyRoute._addFileChildren(
    MainDashboardSettingsRouteLazyRouteChildren,
  )

interface MainDashboardRouteRouteChildren {
  MainDashboardAnalyticsRoute: typeof MainDashboardAnalyticsRoute
  MainDashboardSettingsRouteLazyRoute: typeof MainDashboardSettingsRouteLazyRouteWithChildren
  MainDashboardIndexRoute: typeof MainDashboardIndexRoute
  MainDashboardChatsIndexLazyRoute: typeof MainDashboardChatsIndexLazyRoute
}

const MainDashboardRouteRouteChildren: MainDashboardRouteRouteChildren = {
  MainDashboardAnalyticsRoute: MainDashboardAnalyticsRoute,
  MainDashboardSettingsRouteLazyRoute:
    MainDashboardSettingsRouteLazyRouteWithChildren,
  MainDashboardIndexRoute: MainDashboardIndexRoute,
  MainDashboardChatsIndexLazyRoute: MainDashboardChatsIndexLazyRoute,
}

const MainDashboardRouteRouteWithChildren =
  MainDashboardRouteRoute._addFileChildren(MainDashboardRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mainDashboard': typeof MainDashboardRouteRouteWithChildren
  '/mainDashboard/analytics': typeof MainDashboardAnalyticsRoute
  '/mainDashboard/settings': typeof MainDashboardSettingsRouteLazyRouteWithChildren
  '/mainDashboard/': typeof MainDashboardIndexRoute
  '/mainDashboard/settings/account': typeof MainDashboardSettingsAccountLazyRoute
  '/mainDashboard/settings/appearance': typeof MainDashboardSettingsAppearanceLazyRoute
  '/mainDashboard/settings/display': typeof MainDashboardSettingsDisplayLazyRoute
  '/mainDashboard/settings/notifications': typeof MainDashboardSettingsNotificationsLazyRoute
  '/mainDashboard/chats': typeof MainDashboardChatsIndexLazyRoute
  '/mainDashboard/settings/': typeof MainDashboardSettingsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/mainDashboard/analytics': typeof MainDashboardAnalyticsRoute
  '/mainDashboard': typeof MainDashboardIndexRoute
  '/mainDashboard/settings/account': typeof MainDashboardSettingsAccountLazyRoute
  '/mainDashboard/settings/appearance': typeof MainDashboardSettingsAppearanceLazyRoute
  '/mainDashboard/settings/display': typeof MainDashboardSettingsDisplayLazyRoute
  '/mainDashboard/settings/notifications': typeof MainDashboardSettingsNotificationsLazyRoute
  '/mainDashboard/chats': typeof MainDashboardChatsIndexLazyRoute
  '/mainDashboard/settings': typeof MainDashboardSettingsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/mainDashboard': typeof MainDashboardRouteRouteWithChildren
  '/mainDashboard/analytics': typeof MainDashboardAnalyticsRoute
  '/mainDashboard/settings': typeof MainDashboardSettingsRouteLazyRouteWithChildren
  '/mainDashboard/': typeof MainDashboardIndexRoute
  '/mainDashboard/settings/account': typeof MainDashboardSettingsAccountLazyRoute
  '/mainDashboard/settings/appearance': typeof MainDashboardSettingsAppearanceLazyRoute
  '/mainDashboard/settings/display': typeof MainDashboardSettingsDisplayLazyRoute
  '/mainDashboard/settings/notifications': typeof MainDashboardSettingsNotificationsLazyRoute
  '/mainDashboard/chats/': typeof MainDashboardChatsIndexLazyRoute
  '/mainDashboard/settings/': typeof MainDashboardSettingsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/mainDashboard'
    | '/mainDashboard/analytics'
    | '/mainDashboard/settings'
    | '/mainDashboard/'
    | '/mainDashboard/settings/account'
    | '/mainDashboard/settings/appearance'
    | '/mainDashboard/settings/display'
    | '/mainDashboard/settings/notifications'
    | '/mainDashboard/chats'
    | '/mainDashboard/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/mainDashboard/analytics'
    | '/mainDashboard'
    | '/mainDashboard/settings/account'
    | '/mainDashboard/settings/appearance'
    | '/mainDashboard/settings/display'
    | '/mainDashboard/settings/notifications'
    | '/mainDashboard/chats'
    | '/mainDashboard/settings'
  id:
    | '__root__'
    | '/'
    | '/mainDashboard'
    | '/mainDashboard/analytics'
    | '/mainDashboard/settings'
    | '/mainDashboard/'
    | '/mainDashboard/settings/account'
    | '/mainDashboard/settings/appearance'
    | '/mainDashboard/settings/display'
    | '/mainDashboard/settings/notifications'
    | '/mainDashboard/chats/'
    | '/mainDashboard/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainDashboardRouteRoute: typeof MainDashboardRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainDashboardRouteRoute: MainDashboardRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/mainDashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/mainDashboard": {
      "filePath": "mainDashboard/route.tsx",
      "children": [
        "/mainDashboard/analytics",
        "/mainDashboard/settings",
        "/mainDashboard/",
        "/mainDashboard/chats/"
      ]
    },
    "/mainDashboard/analytics": {
      "filePath": "mainDashboard/analytics.tsx",
      "parent": "/mainDashboard"
    },
    "/mainDashboard/settings": {
      "filePath": "mainDashboard/settings/route.lazy.tsx",
      "parent": "/mainDashboard",
      "children": [
        "/mainDashboard/settings/account",
        "/mainDashboard/settings/appearance",
        "/mainDashboard/settings/display",
        "/mainDashboard/settings/notifications",
        "/mainDashboard/settings/"
      ]
    },
    "/mainDashboard/": {
      "filePath": "mainDashboard/index.tsx",
      "parent": "/mainDashboard"
    },
    "/mainDashboard/settings/account": {
      "filePath": "mainDashboard/settings/account.lazy.tsx",
      "parent": "/mainDashboard/settings"
    },
    "/mainDashboard/settings/appearance": {
      "filePath": "mainDashboard/settings/appearance.lazy.tsx",
      "parent": "/mainDashboard/settings"
    },
    "/mainDashboard/settings/display": {
      "filePath": "mainDashboard/settings/display.lazy.tsx",
      "parent": "/mainDashboard/settings"
    },
    "/mainDashboard/settings/notifications": {
      "filePath": "mainDashboard/settings/notifications.lazy.tsx",
      "parent": "/mainDashboard/settings"
    },
    "/mainDashboard/chats/": {
      "filePath": "mainDashboard/chats/index.lazy.tsx",
      "parent": "/mainDashboard"
    },
    "/mainDashboard/settings/": {
      "filePath": "mainDashboard/settings/index.lazy.tsx",
      "parent": "/mainDashboard/settings"
    }
  }
}
ROUTE_MANIFEST_END */
